{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","artist","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"yPAIMA,E,qLACW,IAAD,OACZ,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC3B,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC7B,yBAAKF,UAAU,yBACZ,4BACAA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFrC,WAON,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAOrC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GApB3BC,aA+BRC,eALS,SAACC,GACvB,MAAO,CAAEX,MAAOW,EAAMX,SAIgB,CAACO,WClCf,SAAAL,GAExB,MAAO,CACLU,KAAM,gBACNC,QAASX,KD8BEQ,CAAwCb,GETxCa,G,MAAAA,aAJS,SAACC,GACrB,MAAM,CAAET,KAAMS,EAAMG,gBAGTJ,EAtBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACpB,OAAKA,EAML,yBAAKC,UAAU,gBACb,qCAAWD,EAAKG,MACd,6BADF,WAEWH,EAAKa,OACd,6BAHF,aAIab,EAAKc,WAVX,mDCkBIC,EAlBH,WACV,OAEA,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACf,6BACE,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBAEf,kBAAC,EAAD,UCSOe,cAAgB,CAC3BlB,MAxBiB,WACnB,MAAO,CACL,CAAEK,MAAO,gBAAiBW,SAAU,OAAQD,OAAQ,SACpD,CAAEV,MAAO,qBAAsBW,SAAU,OAAQD,OAAQ,qBACzD,CAAEV,MAAO,wBAAyBW,SAAU,OAAQD,OAAQ,iBAC5D,CAAEV,MAAO,cAAeW,SAAU,OAAQD,OAAQ,iBAClD,CAAEV,MAAO,8BAA+BW,SAAU,OAAQD,OAAQ,SAClE,CAAEV,MAAO,qBAAsBW,SAAU,OAAQD,OAAQ,gBACzD,CAAEV,MAAO,OAAQW,SAAU,OAAQD,OAAQ,aAC3C,CAAEV,MAAO,gBAAiBW,SAAU,OAAQD,OAAQ,SACpD,CAAEV,MAAO,kBAAmBW,SAAU,OAAQD,OAAQ,kBACtD,CAAEV,MAAO,WAAYW,SAAU,OAAQD,OAAQ,mBAc/CD,aATwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMK,EAAW,uCACzD,MAAoB,kBAAhBA,EAAOP,KACFO,EAAON,QAETC,KChBTM,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC7B,kBAAC,EAAD,MADA,KAGCC,SAASC,cAAc,Y","file":"static/js/main.8ef6eb3c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions'\n\nclass SongList extends Component {\n  renderList () {\n    return this.props.songs.map((song) => {\n      return (\n          <div className=\"item\" key={song.title}>\n             <div className=\"right floated content\">\n                <button\n                className=\"ui button primary\"\n                onClick={() => this.props.selectSong(song)}\n                >\n                  Select\n                </button>\n             </div>\n          <div className=\"content\">{song.title}</div>\n          </div>\n      );\n    });\n  }\n\n  render () {\n    return <div className=\"ui divided list\">{this.renderList()}</div>\n  }\n}\n\n// This 'state' has all of the information inside the redux store\n\nconst mapStateToProps = (state) => {\n  return { songs: state.songs };\n\n};\n\nexport default connect(mapStateToProps, {selectSong}) (SongList);\n","// action creater\nexport const selectSong = song => {\n  // return an action\n  return {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n\n\n// check\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './SongDetails.css'\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a song!</div>;\n  }\n\n  return (\n\n  <div className=\"song-details\">\n    <p>Title: {song.title}\n      <br/>\n      Artist: {song.artist}\n      <br/>\n      Duration: {song.duration}\n    </p>\n  </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n    return{ song: state.selectedSong }\n};\n\nexport default connect (mapStateToProps) (SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\nimport './SongDetails.css'\n\n\nconst App = () => {\n  return (\n\n  <div className=\"ui container grid\">\n    <div className=\"ui row\">\n        <div className=\"column eight wide\">\n        <br/>\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n        \n        <SongDetail />\n        </div>\n      </div>\n  </div>\n);\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\n\nconst songsReducer = () => {\n  return [\n    { title: 'Thunderstruck', duration: '4:52', artist: \"AC/DC\"},\n    { title: 'Shout at the Devil', duration: '3:16', artist: \"Mötley Crüe\"},\n    { title: 'Welcome to the Jungle', duration: '4:33', artist: \"Guns N' Roses\"},\n    { title: 'Crazy Train', duration: '4:56', artist: \"Ozzy Osbourne\"},\n    { title: 'You Shook Me All Night Long', duration: '3:28', artist: \"AC/DC\"},\n    { title: 'Stairway to Heaven', duration: '8:02', artist: \"Led Zeppelin\"},\n    { title: 'Jump', duration: '4:02', artist: \"Van Halen\"},\n    { title: 'Back In Black', duration: '4:13', artist: \"AC/DC\"},\n    { title: 'Paint it, Black', duration: '3:23', artist: \"Rolling Stones\"},\n    { title: 'Iron Man', duration: '3:33', artist: \"Black Sabbath\"},\n\n  ];\n};\n\nconst selectedSongReducer = (selectedSong=null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n  <App/>,\n  </Provider>,\n   document.querySelector('#root'))\n"],"sourceRoot":""}